{"version":3,"sources":["App.js","index.js"],"names":["App","useState","movieinfo","setMovieinfo","title","setTitle","getMovieData","url","fetch","then","response","json","movie","console","log","catch","err","useEffect","className","type","placeholder","onChange","event","value","target","onClick","undefined","Error","src","Poster","alt","Title","Genre","Director","Plot","Actors","BoxOffice","Language","Released","Runtime","Ratings","map","rating","index","Source","Value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAiHeA,MA5Gf,WACE,MAAgCC,mBAAS,MAAzC,mBAAKC,EAAL,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,gBAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KAWA,SAASC,IACP,IAAIC,EAAG,qCAAiCH,EAAjC,oBACPI,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLT,EAAaS,GACbC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAIlB,OAtBAC,qBAAU,WACRX,MACC,IAqBD,qBAAKY,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,8CACA,sBAAKA,UAAU,cAAf,UACE,uBACEC,KAAK,OACLC,YAAY,mBACZF,UAAU,eACVG,SAAU,SAACC,GA5BvB,IAAmBC,IA6BKD,EAAME,OAAOD,MA5BnCV,QAAQC,IAAIS,GACZlB,EAASkB,MA8BD,wBAAQL,UAAU,MAAMO,QAASnB,EAAjC,4BAIoBoB,KAAZ,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,OACV,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBACEU,IAAG,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAW2B,OAChBX,UAAU,aACVY,IAAI,iBAGR,qBAAKZ,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oCAAKhB,QAAL,IAAKA,OAAL,EAAKA,EAAW6B,QAChB,8BACE,8CADF,OAEG7B,QAFH,IAEGA,OAFH,EAEGA,EAAW8B,SAEd,8BACE,oDADF,OAEG9B,QAFH,IAEGA,OAFH,EAEGA,EAAW+B,YAEd,8BACE,6CADF,OAEG/B,QAFH,IAEGA,OAFH,EAEGA,EAAWgC,QAEd,8BACE,6CADF,OAEGhC,QAFH,IAEGA,OAFH,EAEGA,EAAWiC,UAEd,8BACE,mDADF,OAEGjC,QAFH,IAEGA,OAFH,EAEGA,EAAWkC,aAEd,8BACE,iDADF,OAEGlC,QAFH,IAEGA,OAFH,EAEGA,EAAWmC,YAEd,8BACE,qDADF,OAEGnC,QAFH,IAEGA,OAFH,EAEGA,EAAWoC,YAEd,8BACE,gDADF,OAEGpC,QAFH,IAEGA,OAFH,EAEGA,EAAWqC,WAEd,qBAAKrB,UAAU,UAAf,gBACGhB,QADH,IACGA,OADH,EACGA,EAAWsC,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACtB,gCACE,iCAASD,EAAOE,SAChB,6BAAKF,EAAOG,UAFJF,gBAUpB,yDCpGZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9345b383.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\n//\n\nfunction App() {\n  let [movieinfo, setMovieinfo] = useState(null);\n  let [title, setTitle] = useState(\"the avengers\");\n\n  useEffect(() => {\n    getMovieData();\n  }, []);\n\n  function readTitle(value) {\n    console.log(value);\n    setTitle(value);\n  }\n\n  function getMovieData() {\n    let url = `https://www.omdbapi.com/?t=${title}&apikey=784a9d41`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((movie) => {\n        setMovieinfo(movie);\n        console.log(movie);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"padd\">\n          <h1>Movie Search</h1>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Movie Name\"\n              className=\"search-field\"\n              onChange={(event) => {\n                readTitle(event.target.value);\n              }}\n            />\n            <button className=\"btn\" onClick={getMovieData}>\n              Search\n            </button>\n          </div>\n          {movieinfo?.Error === undefined ? (\n            <div className=\"movie\">\n              <div className=\"poster\">\n                <img\n                  src={movieinfo?.Poster}\n                  className=\"poster-img\"\n                  alt=\"poster-img\"\n                />\n              </div>\n              <div className=\"details\">\n                <div className=\"padd\">\n                  <h2>{movieinfo?.Title}</h2>\n                  <p>\n                    <strong>Genre : </strong>\n                    {movieinfo?.Genre}\n                  </p>\n                  <p>\n                    <strong>Directed By : </strong>\n                    {movieinfo?.Director}\n                  </p>\n                  <p>\n                    <strong>Plot : </strong>\n                    {movieinfo?.Plot}\n                  </p>\n                  <p>\n                    <strong>Cast : </strong>\n                    {movieinfo?.Actors}\n                  </p>\n                  <p>\n                    <strong>Box Office : </strong>\n                    {movieinfo?.BoxOffice}\n                  </p>\n                  <p>\n                    <strong>Language : </strong>\n                    {movieinfo?.Language}\n                  </p>\n                  <p>\n                    <strong>Release Date : </strong>\n                    {movieinfo?.Released}\n                  </p>\n                  <p>\n                    <strong>Runtime : </strong>\n                    {movieinfo?.Runtime}\n                  </p>\n                  <div className=\"ratings\">\n                    {movieinfo?.Ratings.map((rating, index) => (\n                      <div key={index}>\n                        <strong>{rating.Source}</strong>\n                        <h3>{rating.Value}</h3>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <h1>Movie Not Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}